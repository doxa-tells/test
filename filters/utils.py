import os
from openai import OpenAI
from dotenv import load_dotenv
from pathlib import Path

# –ü–æ–¥–≥—Ä—É–∂–∞–µ–º –∫–ª—é—á
env_path = Path(__file__).resolve().parent.parent / "telegram_bot" / ".env"
load_dotenv(dotenv_path=env_path)
openai_key = os.getenv("OPENAI_API_KEY")

client = OpenAI(api_key=openai_key)

def match_profile_with_casting(casting_text, profile):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –∫–∞—Å—Ç–∏–Ω–≥ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ –ø—Ä–æ—Ñ–∏–ª—å.
    """
    prompt = f"""
–£ —Ç–µ–±—è –µ—Å—Ç—å –∫–∞—Å—Ç–∏–Ω–≥ –∏ –∞–∫—Ç—ë—Ä—Å–∫–∏–π –ø—Ä–æ—Ñ–∏–ª—å. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –¥–∞–Ω–Ω—ã–π –∫–∞—Å—Ç–∏–Ω–≥ —ç—Ç–æ–º—É —á–µ–ª–æ–≤–µ–∫—É.

–ë—É–¥—å –≥–∏–±–∫–∏–º:
- –ï—Å–ª–∏ –≤ –∫–∞—Å—Ç–∏–Ω–≥–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–∞–∫–∏–µ-–ª–∏–±–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–∏–ø–∞–∂, —Ä–æ—Å—Ç –∏–ª–∏ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ), —ç—Ç–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –º–µ—à–∞—Ç—å –ø–æ–¥–±–æ—Ä—É.
- –ï—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç —á–∞—Å—Ç–∏—á–Ω–æ, –Ω–æ –ø–æ —Å—É—Ç–∏ —á–µ–ª–æ–≤–µ–∫ –º–æ–≥ –±—ã –ø–æ–¥–æ–π—Ç–∏ –Ω–∞ —Ä–æ–ª—å ‚Äî —Ç–∞–∫–∂–µ —Å—á–∏—Ç–∞–π, —á—Ç–æ –ø–æ–¥—Ö–æ–¥–∏—Ç.

üìÑ –ö–∞—Å—Ç–∏–Ω–≥:
{casting_text}

üë§ –ü—Ä–æ—Ñ–∏–ª—å –∞–∫—Ç—ë—Ä–∞:
–ü–æ–ª: {profile.get('sex', '-')}
–¢–∏–ø–∞–∂: {profile.get('type', '-')}
–ò–≥—Ä–æ–≤–æ–π –í–æ–∑—Ä–∞—Å—Ç: {profile.get('age', '-')}
–†–æ—Å—Ç: {profile.get('height', '-')}
–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ: {profile.get('body', '-')}
–ì–æ—Ä–æ–¥: {profile.get('location', '-')}

–ü–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –¥–∞–Ω–Ω—ã–π –∫–∞—Å—Ç–∏–Ω–≥ —ç—Ç–æ–º—É —á–µ–ª–æ–≤–µ–∫—É?
–û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ: –¥–∞ –∏–ª–∏ –Ω–µ—Ç.
"""

    try:
        response = client.chat.completions.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": "–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–∞—Å—Ç–∏–Ω–≥-–¥–∏—Ä–µ–∫—Ç–æ—Ä."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.3,
        )

        answer = response.choices[0].message.content.strip().lower()
        print(f"ü§ñ –û—Ç–≤–µ—Ç GPT: {answer}")  # –ª–æ–≥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

        # –°—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        if answer.startswith("–¥–∞"):
            return True
        elif answer.startswith("–Ω–µ—Ç"):
            return False
        else:
            print("‚ö†Ô∏è –ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç GPT, —Å—á–∏—Ç–∞–µ–º –∫–∞–∫ '–Ω–µ—Ç'")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è: {e}")
        return False