// formatCastingTemplate.js
const fs = require("fs");
const path = require("path");
const { OpenAI } = require("openai");
require("dotenv").config();

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

// üîπ –ú–∞—Ä–∫–µ—Ä—ã –æ—Ç–∫–∞–∑–∞ –æ—Ç –º–æ–¥–µ–ª–∏ (RU/EN)
const REFUSAL_MARKERS = [
  // –∞–Ω–≥–ª
  "i'm sorry", "im sorry", "sorry", "i cannot", "i can't", "i wont", "i won't",
  "i am unable", "i'm unable", "unable to", "not able to", "as an ai",
  "cannot comply", "i must refuse", "policy", "cannot help", "can't help",
  // —Ä—É—Å
  "–∏–∑–≤–∏–Ω–∏—Ç–µ", "–∏–∑–≤–∏–Ω—è—é—Å—å", "–ø—Ä–æ—Å—Ç–∏—Ç–µ", "–∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é",
  "–Ω–µ –º–æ–≥—É", "–Ω–µ —Å–º–æ–≥—É", "–Ω–µ –±—É–¥—É", "—è –Ω–µ –º–æ–≥—É", "—è –Ω–µ –±—É–¥—É",
  "—è –Ω–µ –∏–º–µ—é –ø—Ä–∞–≤–∞", "–Ω–µ –∏–º–µ—é –ø—Ä–∞–≤–∞", "–Ω–µ –º–æ–≥—É –ø–æ–º–æ—á—å", "–Ω–µ –º–æ–≥—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å"
];

const MAX_ATTEMPTS = 10;

async function formatCastingTemplate(text = "", imagePath = null) {
  const content = [];

  // üì© –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞
  content.push({
    type: "text",
    text: `–¢—ã –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∫–∞—Å—Ç–∏–Ω–≥ –≤ –µ–¥–∏–Ω—ã–π —à–∞–±–ª–æ–Ω. –¢–û–õ–¨–ö–û –®–ê–ë–õ–û–ù –ó–ê–ü–û–õ–ù–ï–ù–ù–´–ô –ü–û –ú–ê–ö–°–ò–ú–£–ú–£, –ë–ï–ó –í–°–¢–£–ü–õ–ï–ù–ò–ô/–û–ë–™–Ø–°–ù–ï–ù–ò–ô/–û–ü–†–ê–í–î–ê–ù–ò–ô.
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ –ø–æ —à–∞–≥–∞–º:
‚Äî –ü—Ä–æ—á–∏—Ç–∞–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
‚Äî –ï—Å–ª–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∏ –Ω–∞ –Ω—ë–º –µ—Å—Ç—å —Ç–µ–∫—Å—Ç ‚Äî —Ç–æ–∂–µ –µ–≥–æ —É—á—Ç–∏.
‚Äî –ï—Å–ª–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞ ‚Äî –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–π –µ–≥–æ.
‚Äî –ò–≥–Ω–æ—Ä–∏—Ä—É–π –≤–∏–∑—É–∞–ª—å–Ω—É—é —á–∞—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: –ª–∏—Ü–∞, —Ñ–æ–Ω –∏ —Ç.–¥, –ù–û –ù–ï –¢–ï–ö–°–¢!

–§–æ—Ä–º–∞—Ç —à–∞–±–ª–æ–Ω–∞:
üé® –ü—Ä–æ–µ–∫—Ç: [–Ω–∞–∑–≤–∞–Ω–∏–µ/—Ç–∏–ø –ø—Ä–æ–µ–∫—Ç–∞]  
üë§ –†–æ–ª—å/–¢–∏–ø–∞–∂: [–æ–ø–∏—Å–∞–Ω–∏–µ —Ä–æ–ª–∏]  
üóì –î–∞—Ç–∞ —Å—ä—ë–º–æ–∫: [–¥–∞—Ç–∞]  
‚è∞ –í—Ä–µ–º—è: [–≤—Ä–µ–º—è]  
üí∞ –ì–æ–Ω–æ—Ä–∞—Ä: [—Å—É–º–º–∞]  
üìç –õ–æ–∫–∞—Ü–∏—è: [–≥–æ—Ä–æ–¥/–º–µ—Å—Ç–æ]  
üì© –ö–æ–Ω—Ç–∞–∫—Ç: [—Å—Å—ã–ª–∫–∞/–Ω–∏–∫–Ω–µ–π–º]  
üìù –î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: [–≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ]

–ï—Å–ª–∏ –∫–∞–∫–æ–µ-—Ç–æ –ø–æ–ª–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ ‚Äî —Å—Ç–∞–≤—å –ø—Ä–æ—á–µ—Ä–∫ "-".

–í–æ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ:
${text}`
  });

  // üì∑ –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
  if (imagePath && fs.existsSync(imagePath)) {
    const imageBuffer = fs.readFileSync(imagePath);
    const base64Image = imageBuffer.toString("base64");

    content.push({
      type: "image_url",
      image_url: {
        url: `data:image/jpeg;base64,${base64Image}`,
        detail: "low"
      }
    });
  }

  // üîÅ –ü–æ–≤—Ç–æ—Ä—è–µ–º –¥–æ MAX_ATTEMPTS, –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
  let attempt = 1;
  while (attempt <= MAX_ATTEMPTS) {
    try {
      console.log(`üß† GPT attempt #${attempt}`);
      const response = await openai.chat.completions.create({
        model: "gpt-4o-mini",
        messages: [{ role: "user", content }],
        max_tokens: 1000
      });

      const result = (response.choices?.[0]?.message?.content || "").trim();
      const rl = result.toLowerCase();

      const refused = !result || REFUSAL_MARKERS.some(m => rl.includes(m));
      if (!refused) {
        return result;
      } else {
        console.log("‚ö†Ô∏è GPT –¥–∞–ª –æ—Ç–∫–∞–∑/–∏–∑–≤–∏–Ω–µ–Ω–∏–µ –∏–ª–∏ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç. –ü–æ–≤—Ç–æ—Ä—è–µ–º...");
        attempt++;
      }
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:", err.message);
      return text; // –ø—Ä–∏ –æ—à–∏–±–∫–µ API —Å—Ä–∞–∑—É –æ—Ç–¥–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
    }
  }

  // –ï—Å–ª–∏ –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ—É–¥–∞—á–Ω—ã ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
  return text;
}

module.exports = { formatCastingTemplate };